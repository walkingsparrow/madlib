/* -----------------------------------------------------------------------------
 * Test Linear Regression (Ridge & LASSO)
 * -------------------------------------------------------------------------- */

/*
 * The following example is taken from:
 * http://www.stat.columbia.edu/~martin/W2110/SAS_7.pdf
 */
CREATE TABLE houses (
    id SERIAL NOT NULL,
    tax INTEGER,
    bedroom REAL,
    bath REAL,
    price INTEGER,
    size INTEGER,
    lot INTEGER,
    CONSTRAINT pk_houses PRIMARY KEY (id)
);

INSERT INTO houses(tax, bedroom, bath, price, size, lot) VALUES
( 590, 2, 1,    50000,  770, 22100),
(1050, 3, 2,    85000, 1410, 12000),
(  20, 3, 1,    22500, 1060, 3500 ),
( 870, 2, 2,    90000, 1300, 17500),
(1320, 3, 2,   133000, 1500, 30000),
(1350, 2, 1,    90500,  820, 25700),
(2790, 3, 2.5, 260000, 2130, 25000),
( 680, 2, 1,   142500, 1170, 22000),
(1840, 3, 2,   160000, 1500, 19000),
(3680, 4, 2,   240000, 2790, 20000),
(1660, 3, 1,    87000, 1030, 17500),
(1620, 3, 2,   118600, 1250, 20000),
(3100, 3, 2,   140000, 1760, 38000),
(2070, 2, 3,   148000, 1550, 14000),
( 650, 3, 1.5,  65000, 1450, 12000);

CREATE TABLE houses_array AS
SELECT array[1, bedroom, bath, size] AS features, price
FROM houses;

-- pre-conditioning
CREATE TABLE houses_stddev AS
SELECT stddev(bedroom) AS stddev_bedroom, stddev(bath) AS stddev_bath,
    stddev(size) AS stddev_size, stddev(price) AS stddev_price
FROM houses;

CREATE TABLE houses_avg AS
SELECT avg(bedroom) AS avg_bedroom, avg(bath) AS avg_bath,
    avg(size) AS avg_size, avg(price) AS avg_price
FROM houses;

CREATE TABLE houses_array_normalized AS
SELECT 
    array[1, 
        (bedroom - avg_bedroom) / stddev_bedroom,
        (bath - avg_bath) / stddev_bath,
        (size - avg_size) / stddev_size] AS features,
    (price - avg_price) / stddev_price AS price
FROM houses, houses_avg, houses_stddev;

/* ---------------------------------------------------------------------------
 * Ridge Regression
 * -------------------------------------------------------------------------*/
-- 1. same result as linear regression with lambda = 0
DROP TABLE IF EXISTS _temp_id_1 CASCADE;
CREATE TEMPORARY TABLE _temp_id_1 (id INTEGER);

INSERT INTO _temp_id_1
SELECT ridge_newton_run(
    'test_ridge_model',
    'houses_array',
    'features',
    'price',
    4,
    0);

SELECT assert(
    relative_error(coefficients, ARRAY[27923.43, -35524.78, 2269.34, 130.79]) < 1e-4,
    'Ridge with lambda = 0 (houses): Wrong results'
) FROM test_ridge_model, _temp_id_1
WHERE test_ridge_model.id = _temp_id_1.id;

-- 2. with lambda > 0, norm has decreased
DROP TABLE IF EXISTS _temp_id_2 CASCADE;
CREATE TEMPORARY TABLE _temp_id_2 (id INTEGER);

INSERT INTO _temp_id_2
SELECT ridge_newton_run(
    'test_ridge_model',
    'houses_array',
    'features',
    'price',
    4,
    0.1);

SELECT assert(
    norm1 > norm2,
    'Ridge with lambda > 0 should have a smaller 2-norm: Wrong results'
) FROM (
    SELECT array_dot(coefficients, coefficients) as norm1
    FROM test_ridge_model, _temp_id_1
    WHERE test_ridge_model.id = _temp_id_1.id
) AS s,
(
    SELECT array_dot(coefficients, coefficients) as norm2
    FROM test_ridge_model, _temp_id_2
    WHERE test_ridge_model.id = _temp_id_2.id
) AS t;

/* ---------------------------------------------------------------------------
 * LASSO
 * -------------------------------------------------------------------------*/
-- 3. same result as linear regression with lambda = 0
DROP TABLE IF EXISTS _temp_id_3 CASCADE;
CREATE TEMPORARY TABLE _temp_id_3 (id INTEGER);

INSERT INTO _temp_id_3
SELECT lasso_igd_run(
    'test_lasso_model',
    'houses_array_normalized',
    'features',
    'price',
    4,
    0.05,
    0);

SELECT assert(
    loss < 3,
    'LASSO with lambda = 0 (houses): Wrong results'
) FROM test_lasso_model, _temp_id_3
WHERE test_lasso_model.id = _temp_id_3.id;

-- 4. with lambda > 0, l1-norm has decreased
DROP TABLE IF EXISTS _temp_id_4 CASCADE;
CREATE TEMPORARY TABLE _temp_id_4 (id INTEGER);

INSERT INTO _temp_id_4
SELECT lasso_igd_run(
    'test_lasso_model',
    'houses_array_normalized',
    'features',
    'price',
    4,
    0.06,
    1);

SELECT assert(
    norm1 > norm2,
    'LASSO with lambda > 0 should have a smaller 1-norm: Wrong results'
) FROM (
    SELECT @ coefficients[1] + @ coefficients[2] + @ coefficients[3] + @ coefficients[4] as norm1
    FROM test_lasso_model, _temp_id_3
    WHERE test_lasso_model.id = _temp_id_3.id
) AS s,
(
    SELECT @ coefficients[1] + @ coefficients[2] + @ coefficients[3] + @ coefficients[4] as norm2
    FROM test_lasso_model, _temp_id_4
    WHERE test_lasso_model.id = _temp_id_4.id
) AS t;

